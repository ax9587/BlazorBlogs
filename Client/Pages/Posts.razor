@using BlazorBlog.Shared.Dtos;
@inject BlazorBlog.Client.Service.IBlogService BlogService
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@using System.Security.Claims;
@using BlazorBlog.Client.Permissions;

@foreach (var post in BlogPosts)
{
    <div class="card my-4">
       
        <div class="card-body">
            <div class="post-img" style="background-image: url('@(post.Image ?? placeholderImage)');" />
            <h5 class="card-title">@post.Title</h5>
            
            <p class="card-text">@post.Description</p>
            <p class="card-text"><small class="text-muted">@post.DateCreated.ToLongDateString()</small></p>
            <a href="/posts/@post.Url" class="btn btn-primary">Read more...</a>
            @if ((AuthorizationService.AuthorizeAsync(user, BlogPosts, Operations.Delete)).Result.Succeeded)
            {
                <button class="btn btn-danger">Delete</button>
            }
        </div>
    </div>
}



@code {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    private ClaimsPrincipal user { get; set; }





    private List<BlogPostDto> BlogPosts = new List<BlogPostDto>();

    string placeholderImage = "https://via.placeholder.com/1060x180";

    protected override async Task OnInitializedAsync()
    {

        BlogPosts = await BlogService.GetBlogs();

        var authState = await authenticationStateTask;

        user = authState.User;

    }

}
